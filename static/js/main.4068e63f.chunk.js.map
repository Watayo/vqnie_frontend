{"version":3,"sources":["containers/VqeProvider.js","components/organisms/HamiltonianSetting.jsx","hooks.js","containers/BlueqatAPI.js","components/organisms/HowToUse.jsx","components/molecules/Palette.jsx","components/molecules/Ansatz.jsx","components/molecules/AnsatzEditor.jsx","components/organisms/CreateAnsatz.jsx","App.js","reportWebVitals.js","index.js"],"names":["VqeContext","createContext","useVqe","useContext","VqeProvider","children","useState","vqe_data","vqe","setVqe","Provider","value","setHamiltonianData","Geometry","setAnsatzData","Ansatz","HamiltonianSetting","initialValue","setValue","onChange","e","target","useInput","hamiltonianProps","Box","p","onSubmit","event","preventDefault","sx","display","mx","mt","mb","TextField","variant","style","width","label","required","my","ml","Button","height","type","BlueqatAPI","APIResult","setAPIResult","nowLoading","setNowLoading","m","color","ComposedChart","data","margin","top","right","bottom","left","CartesianGrid","stroke","Tooltip","Legend","XAxis","dataKey","position","offset","YAxis","unit","angle","Scatter","name","fill","Line","dot","activeDot","legendType","onClick","axios","post","url","JSON","stringify","then","response","obj","energy","fullci","catch","error","alert","HowToUse","Palette","className","quantumCircuit","useRef","px","Paper","square","ref","quantumCircuitDOM","current","ansatzJSON","serializedSteps","console","log","AnsatzEditor","CreateAnsatz","App","AppBar","Toolbar","Typography","component","flexGrow","justifyContent","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4068e63f.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\nimport vqe_data from \"../data/vqe_data.json\";\r\n\r\nconst VqeContext = createContext();\r\nexport const useVqe = () => useContext(VqeContext);\r\n\r\nfunction VqeProvider({ children }) {\r\n  const [vqe, setVqe] = useState(vqe_data);\r\n\r\n  const setHamiltonianData = (Geometry) =>\r\n    setVqe({\r\n      ...vqe,\r\n      Geometry: Geometry,\r\n    });\r\n\r\n  const setAnsatzData = (Ansatz) =>\r\n    setVqe({\r\n      ...vqe,\r\n      Ansatz: Ansatz,\r\n    });\r\n\r\n  return (\r\n    <VqeContext.Provider\r\n      value={{\r\n        vqe,\r\n        setHamiltonianData,\r\n        setAnsatzData,\r\n      }}\r\n    >\r\n      {children}\r\n    </VqeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default VqeProvider;\r\n","import { React } from \"react\";\nimport { useVqe } from \"../../containers/VqeProvider\";\nimport { useInput } from \"../../hooks\";\nimport { TextField, Button, Box } from \"@mui/material\";\nimport \"../css/VqeSetting.css\";\n\nconst HamiltonianSetting = () => {\n  const [hamiltonianProps] = useInput(\"\");\n  const { vqe, setHamiltonianData } = useVqe();\n\n  const submit = (event) => {\n    event.preventDefault();\n    setHamiltonianData(hamiltonianProps.value);\n    // resetHamiltonian();\n  };\n\n  return (\n    <>\n      <Box p={2}>\n        <h2>SetGeometry</h2>\n        <form onSubmit={submit}>\n          <Box sx={{ display: \"flex\", mx: 1 }} mt={2.5} mb={1.25}>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 500 }}\n              label=\"Geometry\"\n              required\n              {...hamiltonianProps}\n            />\n            <Box sx={{ my: \"auto\", ml: 2 }}>\n              <Button style={{ height: 45 }} type=\"submit\" variant=\"contained\">\n                {vqe[\"Geometry\"] === \"\" ? (\n                  <span>SET</span>\n                ) : (\n                  <span>DONE/SET</span>\n                )}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nexport default HamiltonianSetting;\n","import { useState } from \"react\";\r\n\r\nexport function useInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  return [\r\n    { value, onChange: (e) => setValue(e.target.value) },\r\n    () => setValue(initialValue),\r\n  ];\r\n}\r\n","import { React, useState } from \"react\";\nimport axios from \"axios\";\nimport { Box, Button } from \"@mui/material\";\nimport { useVqe } from \"./VqeProvider\";\nimport {\n  ComposedChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n  Scatter,\n} from \"recharts\";\nimport { Rings } from \"react-loader-spinner\";\n\nconst url = \"http://127.0.0.1:5000/\";\nconst BlueqatAPI = () => {\n  const { vqe } = useVqe();\n  const [APIResult, setAPIResult] = useState([]);\n  const [nowLoading, setNowLoading] = useState(false);\n  const postData = () => {\n    setNowLoading(true);\n    setAPIResult([]);\n    axios\n      .post(url + \"quc_api\", JSON.stringify(vqe))\n      .then((response) => {\n        for (let data of response.data) {\n          const obj = {\n            name: data.name,\n            energy: data.energy,\n            fullci: data.fullci,\n          };\n          setAPIResult((APIResult) => [...APIResult, obj]);\n          setNowLoading(false);\n        }\n      })\n      .catch((error) => alert(error));\n  };\n  return (\n    <>\n      <Box>\n        <Box p={2}>\n          <h2>Result</h2>\n          {nowLoading ? (\n            <Box sx={{ width: 100, m: \"auto\" }}>\n              <Rings color=\"#00BFFF\" height={80} width={80} />\n            </Box>\n          ) : (\n            <ComposedChart\n              width={630}\n              height={360}\n              data={APIResult}\n              margin={{\n                top: 10,\n                right: 30,\n                bottom: 5,\n                left: 10,\n              }}\n            >\n              <CartesianGrid stroke=\"#f5f5f5\" />\n              <Tooltip />\n              <Legend />\n              <XAxis\n                dataKey=\"name\"\n                type=\"number\"\n                label={{ value: \"x\", position: \"insideBottomRight\", offset: 0 }}\n              />\n              <YAxis\n                unit=\"eV\"\n                type=\"number\"\n                label={{ value: \"Energy\", angle: -90, position: \"insideLeft\" }}\n              />\n              <Scatter name=\"energy\" dataKey=\"energy\" fill=\"red\" />\n              <Line\n                name=\"full_ci\"\n                dataKey=\"fullci\"\n                type=\"monotone\"\n                stroke=\"#82ca9d\"\n                dot={false}\n                activeDot={false}\n                legendType=\"none\"\n              />\n            </ComposedChart>\n          )}\n\n          <Box\n            sx={{\n              display: \"flex\",\n            }}\n            p={2}\n          >\n            <Button\n              onClick={postData}\n              style={{ width: 600, height: 40 }}\n              variant=\"contained\"\n            >\n              API RUN\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BlueqatAPI;\n","import { React } from \"react\";\nimport { Box } from \"@mui/material\";\nimport \"../css/VqeSetting.css\";\n\nconst HowToUse = () => {\n  return (\n    <>\n      <Box p={2}>\n        <h2>Description</h2>\n        <p>\n          GeometryとAnsatzの設定が完了したら、SETを押してください。それぞれのSETボタンが両方DONE/SET状態になったらAPIを実行できます。\n        </p>\n        <p>\n          Geometryには一つだけ変数として\"length\"を入れることができます。blueqatコードの形に準拠して下さい。（水素原子の場合[('H',\n          (0., 0., 0.)),('H', (0., 0., length))]と記入。）\n        </p>\n      </Box>\n    </>\n  );\n};\n\nexport default HowToUse;\n","import React from \"react\";\nimport \"qni\";\nimport \"../css/Palette.css\";\nconst Palette = () => {\n  return (\n    <div className=\"palette\">\n      <palette-dropzone>\n        <h-gate></h-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <x-gate></x-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <y-gate></y-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <z-gate></z-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <rx-gate></rx-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <ry-gate></ry-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <rz-gate></rz-gate>\n      </palette-dropzone>\n      <palette-dropzone>\n        <control-gate></control-gate>\n      </palette-dropzone>\n    </div>\n  );\n};\n\nexport default Palette;\n","import { React, useRef } from \"react\";\nimport { useVqe } from \"../../containers/VqeProvider\";\nimport { Button, Box, Paper } from \"@mui/material\";\nimport \"qni\";\nimport \"../css/QuantumCircuit.css\";\nconst Ansatz = () => {\n  const quantumCircuit = useRef();\n  const { vqe, setAnsatzData } = useVqe();\n\n  const setQuantumCircuit = () => {\n    const divDOM = quantumCircuit.current;\n    const quantumCircuitDOM = divDOM.children;\n    const ansatzJSON = JSON.stringify(quantumCircuitDOM[0].serializedSteps);\n\n    console.log(ansatzJSON);\n    setAnsatzData(ansatzJSON);\n  };\n\n  return (\n    <>\n      <Box px={2}>\n        <p>Drag & Drop Here</p>\n        <Paper variant=\"outlined\" square>\n          <div className=\"quantum-circuit-div\" ref={quantumCircuit}>\n            <quantum-circuit className=\"quantum-circuit\"></quantum-circuit>\n          </div>\n        </Paper>\n      </Box>\n      <Box p={2}>\n        <Button\n          onClick={setQuantumCircuit}\n          style={{ height: 40, width: 590 }}\n          variant=\"contained\"\n        >\n          {vqe[\"Ansatz\"] === \"\" ? <span>SET</span> : <span>DONE/SET</span>}\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Ansatz;\n","import React from \"react\";\nimport Palette from \"./Palette\";\nimport Ansatz from \"./Ansatz\";\nimport \"qni\";\nimport \"../css/CircuitEditor.css\";\n\nconst AnsatzEditor = () => {\n  return (\n    <circuit-editor>\n      <Palette></Palette>\n      <Ansatz></Ansatz>\n    </circuit-editor>\n  );\n};\n\nexport default AnsatzEditor;\n","import { React } from \"react\";\nimport { Box } from \"@mui/material\";\nimport AnsatzEditor from \"../molecules/AnsatzEditor\";\nconst CreateAnsatz = () => {\n  return (\n    <Box p={2}>\n      <h2>CreateAnsatz</h2>\n      <AnsatzEditor></AnsatzEditor>\n    </Box>\n  );\n};\n\nexport default CreateAnsatz;\n","import React from \"react\";\nimport HamiltonianSetting from \"./components/organisms/HamiltonianSetting\";\nimport BlueqatAPI from \"./containers/BlueqatAPI\";\nimport { AppBar, Typography, Toolbar, Box, Paper } from \"@mui/material\";\nimport \"./css/App.css\";\nimport HowToUse from \"./components/organisms/HowToUse\";\nimport CreateAnsatz from \"./components/organisms/CreateAnsatz\";\nconst App = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Blueqat VQE + Qni = VQniE\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }} pt={5}>\n        <Box>\n          <Box\n            sx={{\n              width: 650,\n            }}\n            p={2}\n          >\n            <Paper>\n              <HamiltonianSetting></HamiltonianSetting>\n              <CreateAnsatz></CreateAnsatz>\n            </Paper>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            width: 650,\n          }}\n          p={2}\n        >\n          <Paper>\n            <BlueqatAPI></BlueqatAPI>\n          </Paper>\n        </Box>\n      </Box>\n      <Box sx={{ width: 1332, margin: \"auto\" }}>\n        <Paper>\n          <HowToUse></HowToUse>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport VqeProvider from \"./containers/VqeProvider\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <VqeProvider>\n      <App />\n    </VqeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}